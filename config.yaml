# Configuration for dago-domenai
env: development
debug: true

database:
  # Default Postgres connection (override with DATABASE_URL in .env)
  postgres_url: "postgresql://domenai:password@localhost:5432/domenai"
  save_results: true  # Enable/disable database persistence

logging:
  level: INFO
  log_dir: ./logs

network:
  user_agent: DomainAnalyzerBot/1.0
  request_timeout: 10
  follow_redirects: true
  verify_ssl: true

checks:
  whois:
    enabled: true
    
    # DAS (Domain Availability Service) Configuration
    # Used by: quick-whois profile
    # Purpose: Ultra-fast registration status checking
    # Performance: ~0.02s per domain
    # Rate limit: 4 queries/sec (very generous)
    das:
      server: das.domreg.lt
      port: 4343
      timeout: 5.0  # Socket timeout in seconds
    
    # WHOIS Port 43 Configuration  
    # Used by: whois profile (in addition to DAS)
    # Purpose: Complete registration data (registrar, dates, contacts, nameservers)
    # Performance: ~0.10s per domain
    # Rate limit: 100 queries per 30 minutes (STRICT - enforced by Lithuanian registry)
    whois_server: whois.domreg.lt
    whois_port: 43
    whois_timeout: 10.0  # Longer timeout for WHOIS (more data)
    whois_rate_limit: 100  # Max queries per 30 minutes (strict IP-based blocking)
    
    # Legacy backward compatibility (maps to das config)
    server: das.domreg.lt
    port: 4343
    timeout: 5.0
    rate_limit: 4  # DAS rate (queries per second)
  status:
    enabled: true
  redirect:
    enabled: true
    max_hops: 10
  robots:
    enabled: true
  sitemap:
    enabled: true
  ssl:
    enabled: true

# Export configuration
export:
  enabled: true
  format: both  # Options: 'json', 'csv', or 'both'
  directory: ./exports
  include_summary: true  # Generate summary statistics file

# v1.1.1 - Composable Profile System with Quick WHOIS
# Profiles define which checks to run, organized by data source
# Users can combine profiles: --profiles dns,ssl,seo
profiles:
  # Default profile if none specified
  default: standard
  
  # Enable/disable check modules per profile
  # Core profiles make external API calls
  
  quick-whois:
    enabled: true
    checks:
      - registration_status  # âœ… v1.1.1 - DAS only
  
  whois:
    enabled: true
    checks:
      - registration_status  # âœ… v1.1 - DAS + WHOIS
      - registrar_info       # âœ… v1.1
      - registration_dates   # âœ… v1.1
      - nameservers          # âœ… v1.1
      - contacts             # âœ… v1.1 (if public)
  
  dns:
    enabled: true
    checks:
      - a_record            # ðŸ”„ Planned v1.1
      - aaaa_record         # ðŸ”„ Planned v1.1
      - mx_records          # ðŸ”„ Planned v1.2
      - ns_records          # ðŸ”„ Planned v1.1
      - txt_records         # ðŸ”„ Planned v1.2
      - cname_records       # ðŸ”„ Planned v1.2
  
  http:
    enabled: true
    checks:
      - status_code         # âœ… v0.8.2
      - redirect_chain      # âœ… v0.8.2
      - response_time       # ðŸ”„ Planned v1.1
      - https_available     # ðŸ”„ Planned v1.1
  
  ssl:
    enabled: true
    checks:
      - certificate_present # âœ… v0.7
      - certificate_expiry  # âœ… v0.7
      - certificate_issuer  # âœ… v0.7
      - validation_type     # ðŸ”„ Planned v1.1
  
  # Analysis profiles process data from core profiles (no additional API calls)
  headers:
    enabled: false
    depends_on: [http]
    checks:
      - security_headers    # ðŸ”„ Planned v1.2
      - hsts                # ðŸ”„ Planned v1.2
      - csp                 # ðŸ”„ Planned v2.1
  
  content:
    enabled: false
    depends_on: [http]
    checks:
      - html_title          # ðŸ”„ Planned v1.2
      - meta_description    # ðŸ”„ Planned v1.2
      - content_language    # ðŸ”„ Planned v1.2
  
  infrastructure:
    enabled: false
    depends_on: [dns, http]
    checks:
      - hosting_provider    # ðŸ”„ Planned v1.3
      - cdn_detection       # ðŸ”„ Planned v1.3
      - geolocation         # ðŸ”„ Planned v1.3
  
  technology:
    enabled: false
    depends_on: [http, content]
    checks:
      - tech_stack          # ðŸ”„ Planned v1.3
      - frameworks          # ðŸ”„ Planned v1.3
  
  seo:
    enabled: false
    depends_on: [http, content]
    checks:
      - meta_tags           # ðŸ”„ Planned v1.2
      - robots_txt          # âœ… v0.7
      - sitemap_xml         # âœ… v0.7
  
  # Intelligence profiles for business insights
  security:
    enabled: false
    depends_on: [http, headers, ssl]
    checks:
      - vulnerability_scan  # ðŸ”„ Planned v2.1
      - security_score      # ðŸ”„ Planned v2.1
  
  compliance:
    enabled: false
    depends_on: [http, content, headers]
    checks:
      - gdpr_compliance     # ðŸ”„ Planned v2.1
      - privacy_policy      # ðŸ”„ Planned v2.1
  
  business:
    enabled: false
    depends_on: [whois, http, content]
    checks:
      - company_info        # ðŸ”„ Planned v2.1
      - contact_details     # ðŸ”„ Planned v2.1
  
  language:
    enabled: false
    depends_on: [http, content]
    checks:
      - language_detection  # ðŸ”„ Planned v2.1
      - language_targeting  # ðŸ”„ Planned v2.1
  
  clustering:
    enabled: false
    depends_on: [dns, whois]
    checks:
      - portfolio_detection # ðŸ”„ Planned v2.2
      - domain_clustering   # ðŸ”„ Planned v2.2
  
  # Meta profiles - Pre-configured combinations
  quick-check:
    enabled: true
    profiles: [whois, http]
    description: "Fast filtering - registration + connectivity"
  
  standard:
    enabled: true
    profiles: [whois, dns, http, ssl, seo]
    description: "General analysis - core profiles + seo"
  
  technical-audit:
    enabled: true
    profiles: [whois, dns, http, ssl, headers, security, infrastructure, technology]
    description: "Security and infrastructure focus"
  
  business-research:
    enabled: true
    profiles: [whois, dns, http, ssl, business, language, clustering]
    description: "Market intelligence"
  
  complete:
    enabled: true
    profiles: [whois, dns, http, ssl, headers, content, infrastructure, technology, seo, security, compliance, business, language]
    description: "Comprehensive analysis - all checks"
  
  monitor:
    enabled: true
    profiles: [whois, http]
    description: "Change detection - minimal recurring"

# v0.9 - Smart Redirect Capture Configuration
redirect_capture:
  enabled: true
  
  # Only capture domains with these TLDs
  target_tlds:
    - '.lt'
  
  # Keep full subdomains for these patterns (don't strip to root)
  # Example: stat.gov.lt and lrv.gov.lt are different government agencies
  keep_subdomains_for:
    - '.gov.lt'   # Government agencies
    - '.lrv.lt'   # Lithuanian government
    - '.edu.lt'   # Educational institutions
    - '.mil.lt'   # Military
  
  # Don't capture these common services (not useful for analysis)
  ignore_common_services:
    - 'google.lt'
    - 'maps.google.lt'
    - 'facebook.com'
    - 'youtube.com'
    - 'linkedin.com'
    - 'twitter.com'
    - 'instagram.com'
    - 'google.com'
    - 'googleapis.com'
    - 'gstatic.com'
    - 'cloudflare.com'
    - 'cloudfront.net'
    - 'amazonaws.com'
  
  # Track discovery relationships for analytics
  track_discoveries: true
